1. When would you want to create a remote repository rather than keeping all your work local.
  
  You might want to create a remove repository when you are working on a project with multiple people or if you are working on a
  project from different computers.
  
2. Why might you want to always pull changes manually rather than gaving Git automatically stay up-to-date with your remote repository?
	
	If get were to automatically stay up-to-date you could pull code to your local machine that woudl break the code you are working on (if you are working on the same branch and the commits are not properly merged).

3. Describe the differences between forks, clones, and branches. When would you use one instead of another.

	A clone is a copy of a git repository.  A fork is a clone that is made on GitHub of a repo owned by another GitHub user.  A branch a chain of commits in a repository that has a parent (previous commit) in common with a diverging series of commits.  Typically the main branch is called the master and the other games are given descriptive names.

4. What is the benefit of having a copy of the last known state of the remote storred locally?

	It is useful to have a copy of the last known state storred locally in case you will be away from the internet for some time.  Then you can merge your code into the remote branch and all that is required when you again have internet is a fast-forwad merge (I beleive you wouldn't need to wory about resolving conflicts).

5. How would you collaborate without using Git or GitHub?  What would be easier, and what would be harder?

	An alternative to git/GitHub would be  a version control system such as google docs.  The advantage git has over Google Docs is that it is easier to see where specific changes are made to files and it is easier to merge changes made by different people to make a unified version.  The disadvantage of git/GitHub is (if I understand correctly) is that these advantages are only easy to take advantage of for plain text files.